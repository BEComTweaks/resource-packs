/* Custom Font */

@font-face {
  font-family: "Futura Heavy";
  src: url("font/Futura_Heavy.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Futura Medium";
  src: url("font/Futura_Medium.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "CaskaydiaMono";
  src: url("font/CaskaydiaMono_Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/*************\
| OreUI HTML  |
\*************/

:root {
  --light-bg: rgb(208, 209, 212);
  --light-border: rgb(222, 223, 225) rgb(227, 227, 229) rgb(227, 227, 229)
    rgb(222, 223, 225);
  --light-bezel: rgb(98, 98, 100);

  --dark-bg: rgb(72, 73, 74);
  --dark-border: rgb(106, 108, 112) rgb(84, 86, 88) rgb(84, 86, 88)
    rgb(106, 108, 112);
  --dark-bezel: rgb(49, 50, 51);
  --outer-bezel-black: black;

  --green-bg: rgb(60, 133, 39);
  --green-border: rgb(99, 157, 82) rgb(79, 145, 60) rgb(79, 145, 60)
    rgb(99, 157, 82);
  --green-bezel: rgb(52, 84, 43);

  --light-disabled-bg: rgb(208, 209, 212);
  --light-disabled-border: rgb(208, 209, 212); /* weird */
  --light-disabled-bezel: rgb(177, 178, 181);
  --outer-bezel-light-disabled: rgb(140, 141, 144);

  --dark-disabled-bg: rgb(53, 54, 55);
  --dark-disabled-border: rgb(78, 80, 83) rgb(62, 64, 65) rgb(62, 64, 65)
    rgb(78, 80, 83);
  --dark-disabled-bezel: rgb(36, 37, 38);

  --pink-bg: rgb(255, 186, 231);
  --pink-border: rgb(255, 235, 248) rgb(245, 215, 235) rgb(245, 215, 235)
    rgb(255, 235, 248);
  --pink-bezel: rgb(117, 38, 89);
  --outer-bezel-pink: rgb(55, 18, 42);

  --red-bg: rgb(214, 71, 71);
  --red-border: rgb(224, 114, 114) rgb(173, 29, 29) rgb(173, 29, 29)
    rgb(224, 114, 114);
  --red-bezel: rgb(96, 24, 25);

  --purple-bg: rgb(115, 69, 229);
  --purple-border: rgb(162, 100, 242) rgb(142, 73, 235) rgb(142, 73, 235)
    rgb(162, 100, 242);
  --purple-bezel: rgb(74, 28, 172);

  --padding: 5px 15px;
  --bezel-size: 5px;
  --hover-overlay: rgba(0, 0, 0, 0.05);
}
[oreui-type="button"] {
  border-width: 5px;
  border-style: solid;
  border-radius: 0;
  cursor: pointer;
  padding: var(--padding);
  transform: translateY(-1px);
  text-align: center;
  /* Take care of the transitions */
  transition:
    border-color 0s,
    background-color 0s;
  /* Bezel */
  &::before {
    position: absolute;
    content: "";
    bottom: calc(-3px - var(--bezel-size));
    left: -3px;
    right: -3px;
    height: var(--bezel-size);
    transform: translateY(0);
    pointer-events: none;
  }
  /* Hover and active states */
  &:hover::before {
    height: 0;
  }
  &:active::before,
  &[oreui-state="active"]::before {
    height: 0;
  }
  /* Reset the transform when not active */
  &:not(:active):not(:hover):not([oreui-state="active"]) {
    transform: translateY(calc(-1px - var(--bezel-size)));
  }
  /* Override the default styles when disabled */
  &[disabled],
  &[disabled="true"],
  &:disabled {
    /* default dark */
    color: white;
    background-color: var(--dark-disabled-bg) !important;
    border-color: var(--dark-disabled-border) !important;
    cursor: not-allowed;
    &::before {
      background-color: var(--dark-disabled-bezel) !important;
    }
    &::after {
      border-color: var(--outer-bezel-black) !important;
    }
    &[oreui-disabled-color="light"] {
      color: black;
      background-color: var(--light-disabled-bg) !important;
      border-color: var(--light-disabled-border) !important;
      &::before {
        background-color: var(--light-disabled-bezel) !important;
      }
      &::after {
        border-color: var(--outer-bezel-light-disabled) !important;
      }
    }
  }
  /* The surrounding bezel 
     Outline could've been used but offset
     isn't flexible (the bottom offset needs
     to change, but it can't) */
  &::after {
    position: absolute;
    content: "";
    border-style: solid;
    border-width: 2.5px;
    bottom: calc(-5px - var(--bezel-size));
    left: -5px;
    right: -5px;
    top: -5px;
    pointer-events: none;
  }
  &:hover::after,
  &:active::after,
  &[oreui-state="active"]::after {
    bottom: -5px;
  }
  /* dim when hover */
  &:hover::after {
    background: var(--hover-overlay);
  }
  /* Colors */
  &[oreui-color="red"],
  &[oreui-active-color="red"]:active,
  &[oreui-active-color="red"][oreui-state="active"] {
    &::before {
      background-color: var(--red-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-black);
    }
  }
  &[oreui-color="pink"],
  &[oreui-active-color="pink"]:active,
  &[oreui-active-color="pink"][oreui-state="active"] {
    &::before {
      background-color: var(--pink-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-pink);
    }
  }
  &[oreui-color="purple"],
  &[oreui-active-color="purple"]:active,
  &[oreui-active-color="purple"][oreui-state="active"] {
    &::before {
      background-color: var(--purple-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-black);
    }
  }
  &[oreui-color="green"],
  &[oreui-active-color="green"]:active,
  &[oreui-active-color="green"][oreui-state="active"] {
    &::before {
      background-color: var(--green-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-black);
    }
  }
  &[oreui-color="light"],
  &[oreui-active-color="light"]:active,
  &[oreui-active-color="light"][oreui-state="active"] {
    &::before {
      background-color: var(--light-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-black);
    }
  }
  &[oreui-color="dark"],
  &[oreui-active-color="dark"]:active,
  &[oreui-active-color="dark"][oreui-state="active"] {
    &::before {
      background-color: var(--dark-bezel);
    }
    &::after {
      border-color: var(--outer-bezel-black);
    }
  }
}

/* Default states */
[oreui-color="red"] {
  background-color: var(--red-bg);
  border-color: var(--red-border);
  color: white;
}
[oreui-color="pink"] {
  background-color: var(--pink-bg);
  border-color: var(--pink-border);
  color: black;
}
[oreui-color="purple"] {
  background-color: var(--purple-bg);
  border-color: var(--purple-border);
  color: white;
}
[oreui-color="green"] {
  background-color: var(--green-bg);
  border-color: var(--green-border);
  color: white;
}
[oreui-color="light"] {
  background-color: var(--light-bg);
  border-color: var(--light-border);
  color: black;
}
[oreui-color="dark"] {
  background-color: var(--dark-bg);
  border-color: var(--dark-border);
  color: white;
}

/* Active states */
[oreui-active-color="red"]:active,
[oreui-active-color="red"][oreui-state="active"] {
  background-color: var(--red-bg);
  border-color: var(--red-border);
  color: white;
}
[oreui-active-color="pink"]:active,
[oreui-active-color="pink"][oreui-state="active"] {
  background-color: var(--pink-bg);
  border-color: var(--pink-border);
  color: black;
}
[oreui-active-color="purple"]:active,
[oreui-active-color="purple"][oreui-state="active"] {
  background-color: var(--purple-bg);
  border-color: var(--purple-border);
  color: white;
}
[oreui-active-color="green"]:active,
[oreui-active-color="green"][oreui-state="active"] {
  background-color: var(--green-bg);
  border-color: var(--green-border);
  color: white;
}
[oreui-active-color="light"]:active,
[oreui-active-color="light"][oreui-state="active"] {
  background-color: var(--light-bg);
  border-color: var(--light-border);
  color: black;
}
[oreui-active-color="dark"]:active,
[oreui-active-color="dark"][oreui-state="active"] {
  background-color: var(--dark-bg);
  border-color: var(--dark-border);
  color: white;
}
[oreui-type="general"] {
  border-width: 5px;
  border-style: solid;
  border-radius: 0;
  padding: var(--padding);
  text-align: center;
  outline: 2.5px solid var(--outer-bezel-black);
  outline-offset: -2px;
}
[oreui-type="input"] {
  background: rgb(51, 51, 51);
  outline: 2.5px solid var(--outer-bezel-black);
  box-shadow: inset 0 5px 0 0 rgb(35, 35, 35);
  outline-offset: -2px;
  color: white;
  &:focus {
    outline-color: white;
    outline-offset: -0.5px;
  }
  &::placeholder {
    color: white;
  }
}

/***********\
| Searchbar |
\***********/

.search-container {
  margin: 0;
  text-align: center;
  position: relative;
  height: 37.5px;
}

.search-results {
  margin: 5px auto;
  padding: 13.75px 10px 0 10px;
  border-radius: 5px;
  position: absolute;
  left: 0;
  right: 0;
  top: 42.5px;
  z-index: 100;
  &[hasmatches="true"] {
    display: block;
  }
  &:not(:hover) {
    display: none;
  }
}

#searchBar {
  position: absolute;
  left: 0;
  right: 0;
  padding: 10px;
  font-size: 16px;
  &:focus + div[hasmatches="true"] {
    display: block;
  }
}

.search-result-item {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 10px;
  div {
    text-align: left;
  }
  p {
    margin: 0;
    font-size: 14px;
  }
}

/**************\
| Custom Theme |
\**************/

:root {
  --dark-zero: rgb(61, 62, 63);
  --leftmargin: 15px;
  --rightmargin: 250px;
  --font: "Futura Medium", white;
  --transition-duration: 1s;
}

a {
  &:active {
    background-color: transparent;
    color: white;
    font-family: "Futura Heavy";
    text-decoration: underline;
  }

  &:hover {
    background-color: transparent;
    color: white;
    text-decoration: underline;
  }

  &:link {
    background-color: transparent;
    color: white;
    text-decoration: none;
  }

  &:visited {
    background-color: transparent;
    color: white;
    text-decoration: none;
  }
}
body {
  color: white;
  font-family: var(--font);
  margin: 0;
  padding: 0;
}

button {
  color: white;
  font-family: var(--font);
}

header {
  color: grey;
  padding: 10px 0;
  text-align: center;
}

input {
  color: white;
  font-family: var(--font);
}

li {
  float: left;
  a {
    color: white;
    display: block;
    padding: 14px 16px;
    text-align: center;
    text-decoration: none;
  }
}
select {
  color: white;
  font-family: var(--font);
  text-align: center;
  text-align-last: center;
}
#background-container {
  background-size: cover;
  display: flex;
  flex-wrap: nowrap;
  grid-template-columns: repeat(auto-fill, 100px);
  grid-template-rows: repeat(auto-fill, 100px);
  height: 100%;
  image-rendering: pixelated;
  left: 0;
  overflow: visible;
  pointer-events: none;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 0;
}

#selected-tweaks {
  display: none;
  overflow-y: auto;
  padding: 0px 5px 5px 5px;
  text-align: center;
  &:has(> [no-pack]) {
    padding: 5px;
  }
}

#title {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  height: auto;
  position: relative;
  size: cover;
  text-align: center;
  width: 100%;
  z-index: 1;
}

#zipInput {
  display: none;
}

.category {
  margin-bottom: 20px;
  margin-top: 20px;
}

.category-controlled {
  position: relative;
  display: none;
  gap: 10px;
  max-height: 0;
  bottom: -2.5px;
  right: -0.5px;
  overflow-y: hidden;
  padding: 0px 10px 0 10px;
  margin-top: -40px;
  margin-bottom: 40px;
  &[style*="max-height"] {
    padding: 40px 10px 12.5px 10px !important;
    margin-bottom: 0px !important;
  }
}

.category-label {
  position: relative;
  cursor: pointer;
  font-size: 20px;
  height: auto;
  margin-bottom: -5px;
  padding: 5px 40px;
  text-align: center;
  user-select: none;
  z-index: 13;
}

[class$="category"] {
  position: relative;
}

.category-label-selectall {
  background-color: #00000000;
  border-color: #00000000;
  border-radius: 2.5px;
  cursor: pointer;
  display: none;
  height: 30px;
  opacity: 0;
  position: absolute;
  right: 12.5px;
  transform: translateY(-108%);
  width: 30px;
  z-index: 14;
  &.sub {
    transform: translate(-25%, -108%);
  }
  &:hover .category-label-selectall-hovertext {
    display: block;
  }
}

.category-label-selectall-hovertext {
  background-color: var(--dark-bg-hover);
  border-radius: 5px;
  display: none;
  font-size: 15px;
  transform: translate(-125%, -142%);
  width: max-content;
}

.category-label-selectall-img {
  height: 100%;
  image-rendering: pixelated;
  transform: translateX(-12.5%);
  width: auto;
}

.container {
  background: #0000007f;
  border-radius: 5px;
  padding: 20px;
  position: relative;
  z-index: 0;
}

.credits-footer {
  border-radius: 5px;
  color: white;
  padding: 20px;
  z-index: 5;
  text-align: left;
  margin-bottom: 20px;
  p {
    margin: 10px 0;
  }
  h2 {
    margin: 0;
  }
  h3 {
    margin: 20px 0 0px 0;
  }
}

.download-container {
  background: var(--dark-bezel);
  padding: 15px;
  border-radius: 10px;
  height: auto;
  position: fixed;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 10px;
  bottom: 10px;
  right: 10px;
  width: 200px;
  z-index: 10;
  input[type="text"] {
    padding: 5px 12.5px;
    &::placeholder {
      color: #dddddd;
      text-align: center;
    }
  }
  select {
    font-family: var(--font);
    padding-left: 17.5px;
    padding-right: 17.5px;
  }
}

.download-selected-button {
  font-size: 0.96em;
  cursor: pointer;
  display: block;
  font-family: var(--font);
  padding-left: 17.5px;
  padding-right: 17.5px;
  text-align: center;
  &[oreui-active-color="red"] {
    font-size: 0.875em;
    padding: 5px;
  }
}

.footer-container {
  position: relative;
  z-index: 1;
}

.half-dark,
.loading-screen,
.capture-exit {
  background: #0000007f;
  position: fixed;
  z-index: 0;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

.devtools {
  display: flex;
  justify-content: baseline;
  padding-top: 0;
  padding-left: 10px;
  align-items: baseline;
  flex-direction: column;
  left: 12.5vw;
  right: 12.5vw;
  top: 12.5vh;
  bottom: 12.5vh;
  position: fixed;
  z-index: 75;
  overflow-x: hidden;
  overflow-y: scroll;
  transform: translateY(-150vh);
  > h3 {
    margin-top: 10px;
    margin-bottom: 0;
  }
}

[class^="devtools-toggle"] {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding-right: 15px;
  > p {
    transform: translateY(0) translateX(1em);
    text-wrap: word;
    margin-right: 15px;
  }
  > .switch {
    top: 10px;
  }
  > input[type="number"] {
    position: relative;
    padding-top: 0;
    padding-bottom: 0;
    padding-left: 10px;
    margin-left: 10px;
    margin-top: 5px;
    margin-bottom: 5px;
    appearance: none;
    -moz-appearance: textfield;
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

.devtools-toggle-console:has(> label > input:checked) ~ .devtools-console {
  display: flex;
}

.devtools-console {
  font-family: "CaskaydiaMono";
  display: none;
  flex-direction: column;
  align-items: baseline;
  padding: 10px;
  background-color: rgb(12, 12, 13);
  width: -webkit-fill-available;
  position: relative;
  > h3 {
    margin-top: -5px;
    margin-bottom: 5px;
    left: 0;
    border-bottom: 2px solid white;
  }
  > .devtools-console-content {
    display: flex;
    flex-direction: column;
    align-items: baseline;
    word-wrap: anywhere;
    text-align: left;
    gap: 5px;
  }
}

/* Adapted from https://uiverse.io/aasisodiya/sour-horse-29 */
.switch {
  font-size: 1rem;
  position: relative;
  display: inline-block;
  width: 4em;
  height: 2em;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.25);
  transition: 0.4s;
  border-radius: 0.5em;
  box-shadow: 0 0.2em rgba(0, 0, 0, 0.5);
}

.slider:before {
  position: absolute;
  content: "";
  height: 1.5em;
  width: 1.4em;
  border-radius: 0.3em;
  left: 0.3em;
  bottom: 0.7em;
  background-color: var(--red-bg);
  box-shadow: 0 0.4em rgba(0, 0, 0, 0.5);
}

.slider:hover::before {
  box-shadow: 0 0.19em rgba(0, 0, 0, 0.5);
  bottom: 0.5em;
}

input:checked + .slider:before {
  transform: translateX(2em);
  background: var(--green-bg);
}

.switch:has(> :is(input:disabled, input[disabled])) > .slider::before {
  background-color: rgba(0, 0, 0, 0.5);
}

.capture-exit {
  pointer-events: none;
  z-index: 50;
  opacity: 0;
}

.image-container {
  margin-top: 62.5px;
  margin-bottom: 12.5px;
}

.loader {
  width: 112px;
  height: 112px;
  .box1,
  .box2,
  .box3 {
    border: 16px solid #f5f5f5;
    box-sizing: border-box;
    position: absolute;
    display: block;
    transition: border-color 0.5s ease-in-out;
  }
}

.loading-screen.loading-screen {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s ease-in-out;
  > p {
    padding: 10px;
    font-family: "Futura Heavy";
  }
}

.mev option {
  background: var(--dark-bg);
  font-family: var(--font);
}

.preselected {
  position: fixed;
  z-index: 1000;
  text-align: center;
  padding: 5px 10px;
  left: 50%;
  top: -20vh;
  transform: translateX(-50%);
  transition:
    height 0.25s ease,
    top 0.625s ease-in-out,
    transform 0.625s ease-in-out;
}

.preselected-unselect {
  cursor: pointer;
  color: white;
  text-decoration: underline;
  transition: font-size 0.25s ease;
  &:hover {
    font-family: "Futura Heavy";
    font-size: 1.05em;
  }
}

[class$="nav"] {
  background-color: #333;
  list-style-type: none;
  margin: 0;
  max-height: 45px;
  overflow: hidden;
  padding: 0;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 100;
}

.nav-link:active {
  background-color: transparent;
  color: white;
  text-decoration: underline;
}

.nav-link:hover {
  background-color: transparent;
  color: white;
  text-decoration: underline;
}

.nav-link:link {
  background-color: transparent;
  color: white;
  text-decoration: none;
}

.nav-link:visited {
  background-color: transparent;
  color: white;
  text-decoration: none;
}

.subcategory {
  width: 100%;
  &:not(:last-child) {
    margin-bottom: 20px;
  }
}

.tile {
  background-size: cover;
  height: 100px;
  overflow: hidden;
  width: 100px;
}

.tweak {
  box-shadow: 0 0 10px rgba(49, 50, 51, 1);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  padding: 10px 15px !important;
  position: relative;
  input[type="checkbox"] {
    display: none;
    font-family: var(--font);
  }
  &:hover[oreui-state="active"][oreui-active-color="purple"]
    [class$="hover-text"] {
    display: block;
  }
}

.tweak-description {
  font-size: 0.99em;
}

[class^="desc"] {
  margin-top: 0;
  margin-bottom: 0;
  font-size: 0.875em;
}

.desc-error {
  color: red;
}

.desc-info {
  color: cyan;
}

.desc-warn {
  color: orange;
}

.tweak-info {
  margin-left: -5px;
  margin-right: -5px;
  > img {
    image-rendering: pixelated;
  }
}
.comp-hover-text {
  bottom: 100%;
  transform: translate(-50%, 100%) !important;
}

[class$="hover-text"] {
  display: none;
  position: absolute;
  left: 0%;
  width: calc(100% - 20px);
  word-wrap: anywhere;
  padding: 5px;
  text-align: center;
  z-index: 100;
  font-size: inherit;
  overflow-x: scroll;
  scrollbar-width: none;
  font-size: 13px;
  &::-webkit-scrollbar {
    display: none;
  }
}

.conf-hover-text {
  bottom: 0%;
}

.tweak-list-category {
  display: none;
  font-size: 1.2em;
  font-family: "Futura Heavy";
  text-decoration: underline;
  margin-top: 5px;
}

.tweak-list-pack {
  display: none;
}

.tweak-title {
  font-size: 1.2em;
}

.tweaks,
.subcattweaks {
  position: relative;
  align-items: stretch;
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fit, minmax(137.5px, 1fr));
  margin: 20px;
  text-align: center;
  z-index: 1;
}

.zipinputcontainer {
  display: none;
}

@media (max-width: 767px) {
  .large-nav {
    display: block;
    transform: translateY(-100%);
  }

  .small-nav {
    display: block;
    transform: translateY(0%);
  }
}

@media (min-width: 768px) {
  body {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  #selected-tweaks {
    display: block;
    max-height: 40vh;
    margin-top: -5px;
  }

  #title {
    left: var(--leftmargin);
    right: var(--rightmargin);
    width: calc(100% - var(--leftmargin) - var(--rightmargin));
  }

  .container {
    margin-left: var(--leftmargin);
    margin-right: var(--rightmargin);
  }

  .credits-footer {
    margin-left: var(--leftmargin);
    margin-right: var(--rightmargin);
  }

  .download-container {
    background: #0000007f;
    border-color: #00000000;
    height: auto;
    padding: 20px;
    right: 15px;
    top: 15vh;
    bottom: unset !important;
    width: 180px;
  }

  .large-nav {
    display: block;
    transform: translateY(0%);
  }

  .small-nav {
    display: block;
    transform: translateY(-100%);
  }

  .subcattweaks {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }

  .tweak-list-category {
    display: block;
  }

  .tweak-list-pack {
    display: block;
  }

  .tweaks {
    grid-template-columns: repeat(auto-fit, minmax(175px, 1fr));
  }

  .zipinputcontainer {
    align-items: center;
    bottom: 0;
    cursor: pointer;
    display: flex;
    height: auto;
    justify-content: center;
    position: relative;
    --bezel-size: 2px;
  }
}

@media (prefers-reduced-motion: no-preference) {
  div {
    transition:
      margin-right var(--transition-duration) ease-in-out,
      margin-left var(--transition-duration) ease-in-out;
  }

  #selected-tweaks {
    transition:
      height var(--transition-duration) ease-in-out,
      max-height var(--transition-duration) ease-in-out;
  }

  #title {
    transition:
      left var(--transition-duration) ease-in-out,
      right var(--transition-duration) ease-in-out,
      width var(--transition-duration) ease-in-out;
  }

  .category-controlled {
    transition:
      max-height var(--transition-duration) ease-in-out,
      padding calc(var(--transition-duration) * 0.1) ease-in-out
        calc(var(--transition-duration) * 0.9),
      margin-bottom calc(var(--transition-duration) * 0.1) ease-in-out
        calc(var(--transition-duration) * 0.9);
    &[style*="max-height"] {
      transition:
        max-height var(--transition-duration) ease-in-out,
        padding calc(var(--transition-duration) * 0.1) ease-in-out
          calc(var(--transition-duration) * 0.1),
        margin-bottom calc(var(--transition-duration) * 0.1) ease-in-out
          calc(var(--transition-duration) * 0.1);
    }
  }

  .download-container {
    transition:
      right var(--transition-duration) ease-in-out,
      top var(--transition-duration) ease-in-out,
      width var(--transition-duration) ease-in-out,
      bottom var(--transition-duration) ease-in-out;
  }

  [class$="nav"] {
    transition: transform var(--transition-duration) ease-in-out;
  }
  .category-label-selectall {
    transition: opacity var(--transition-duration) ease-in-out;
  }
  .devtools {
    transition: transform var(--transition-duration) ease-in-out;
  }
  .capture-exit {
    transition: opacity var(--transition-duration) ease-in-out;
  }
}
